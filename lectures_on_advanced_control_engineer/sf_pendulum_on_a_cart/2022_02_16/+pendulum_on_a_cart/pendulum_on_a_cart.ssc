component pendulum_on_a_cart
% pendulum on a cart

    inputs
        f = { 0, 'N' }; % f:left
    end

    nodes
        P1 = foundation.mechanical.translational.translational; % P1:left
        P2 = foundation.mechanical.translational.translational; % P2:right
    end

    outputs
        x = { 0, 'm' };         % x:right
        v = { 0, 'm/s' };         % v:right
        phi = { 0, 'rad' };     % phi:right
        omega = { 0, 'rad/s' };   % omega:right
    end

    parameters
        m0 = {1, 'kg'};                % m0
        m1 = {1,'kg'};                  % m1
        J1 = { 1, 'kg*m^2' };           % J1
        s1 = { 1, 'm' };                % s1
        b0 = { 1, 'N/(m/s)' };          % b0
        b1 = { 1, 'N*m/(rad/s)' };      % b1
        g = { 9.8, 'm/s^2' };           % g
    end

    variables
        d = { 0, 'N' };                % f 
        x1 = { 0, 'm' };                % x 
        x2 = { 0, 'm/s' };              % v 
        x3 = { 0, 'rad' };             % phi 
        x4 = { 0, 'rad/s' };            % omega 

    end
    
    branches
        d : P1.f -> P2.f;    
    end
    
    equations
        x2 == P2.v;

        x1.der == x2;
        x2.der == ((m1*s1^2+J1)*(f+d-b0*x2+m1*s1*x4^2*sin(x3))-(m1*g*s1*sin(x3)...
            -b1*x4)*m1*s1*cos(x3))/((m0+m1)*(m1*s1^2+J1)-(m1*s1*cos(x3))^2);
        x3.der == x4;
        x4.der == (-(f+d-b0*x2+m1*s1*x4^2*sin(x3))*m1*s1*cos(x3)+(m0+m1)*...
            (m1*g*s1*sin(x3)-b1*x4))/((m0+m1)*(m1*s1^2+J1)-(m1*s1*cos(x3))^2);
        
        x == x1;
        v == x2;
        phi == x3;
        omega == x4;
    end
end




















