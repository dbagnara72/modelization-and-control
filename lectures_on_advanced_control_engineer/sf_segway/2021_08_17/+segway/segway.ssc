component segway
% segway

    nodes
        S1 = foundation.mechanical.rotational.rotational; % S1:right
    end

    inputs
        tau_m = { 0, 'N*m' }; % tau_m:left
    end

    outputs
        alpha = { 0, 'rad' };             % alpha:right
        omega_1 = { 0, 'rad/s' };           % omega_1:right
        theta = { 0, 'rad' };               % theta:right
        omega_2 = { 0, 'rad/s' };           % omega_2:right
    end

    parameters
        m1 = {100, 'kg'};               % m1
        m2 = {1,'kg'};                  % m2
        J1 = { 1, 'kg*m^2' };           % J1
        J2 = { 1, 'kg*m^2' };           % J2
        r1 = { 0.25, 'm' };             % r1
        r2 = { 1, 'm' };                % r2
        b1 = { 1, 'N*m/(rad/s)' };      % b1
        b2 = { 1, 'N*m/(rad/s)' };      % b2
        g = { 9.8, 'm/s^2' };           % g
    end

    variables
        d = { 0, 'N*m' };              % d
        x1 = { 0, 'rad' };             % alpha 
        x2 = { 0, 'rad/s' };           % omega_1
        x3 = { 0, 'rad' };             % theta
        x4 = { 0, 'rad/s' };           % omega_2 
    end
 
    branches
        d : S1.t ->*;    
    end
    
    equations
        x2 == S1.w;

        x1.der == x2;
        
        x2.der == (2*(m2*r1*r2*cos(x3)*(-d + tau_m + b2*(x2 + x4) + ...
            g*m2*r2*sin(x3)) - 2*(J2 + m2*r2^2)*(d - tau_m + b1*x2 + ...
            b2*x2 + b2*x4 - m2*r1*r2*x4^2*sin(x3))))/...
            (2*J1*(J2 + m2*r2^2) + r1^2*(2*J2*(m1 + m2) + m2*(2*m1 + ...
            m2)*r2^2) - m2^2*r1^2*r2^2*cos(2*x3));
        
        x3.der == x4;
        
        x4.der == -((2*((J1 + (m1 + m2)*r1^2)*(-d + tau_m + b2*(x2 + ...
            x4) + g*m2*r2*sin(x3)) + m2*r1*r2*cos(x3)*(-d + tau_m - ...
            b1*x2 - b2*x2 - b2*x4 + m2*r1*r2*x4^2*...
            sin(x3))))/(2*J1*(J2 + m2*r2^2) + r1^2*(2*J2*(m1 + m2) + ...
            m2*(2*m1 + m2)*r2^2) - m2^2*r1^2*r2^2*cos(2*x3)));

        omega_1 == x2;
        alpha == x1;        
        omega_2 == x4;
        theta == x3;
    end
end




















